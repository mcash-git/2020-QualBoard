@mixin avatar-size($size, $spacing) {
  margin-right: $spacing;
  img {
    max-height: $size;
    min-height: $size;
    max-width: $size;
    min-width: $size;
  }
}
@mixin loader($size) {
  img {
    height: $size;
    width: $size;
  }
}
@mixin linearGradient($top, $bottom){
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
  background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin hoverDarkenBackground($color, $darkenAmt: 10%) {
  background-color: $color;
  transition: background-color .2s ease-in-out;
  cursor: pointer;

  &:hover {
    background-color: darken($color, $darkenAmt);
  }

  &:active {
    background-color: darken($color, $darkenAmt * 2);
  }
}

@mixin hoverDarkenColor($color, $darkenAmt: 10%) {
  transition: color .2s ease-in-out;
  cursor: pointer;
  color: $color;

  &:not([disabled]):not(.disabled):hover {
    color: darken($color, $darkenAmt);
  }
  &:not([disabled]):not(.disabled):active {
    color: darken($color, $darkenAmt * 2);
  }

  &[disabled], &.disabled {
    opacity: .5;
    cursor: not-allowed;
  }
}

@mixin hoverDarkenBorderColor($color, $darkenAmt: 10%) {
  transition: border-color .2s ease-in-out;
  cursor: pointer;
  border-color: $color;

  &:hover {
    border-color: darken($color, $darkenAmt);
  }

  &:active {
    border-color: darken($color, $darkenAmt * 2);
  }
}
